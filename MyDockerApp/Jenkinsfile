pipeline {
    agent any

    environment {
        PROJECT_PATH = 'MyDockerApp/MyDockerApp.csproj'
        PUBLISH_DIR = 'publish'
        IMAGE_NAME = 'p27625:latest'
        CONTAINER_NAME = 'p27625run'
        EXPOSE_PORT = '91'
        INTERNAL_PORT = '3000'
    }

    stages {
        stage('Clean Workspace') {
            steps {
                deleteDir()
            }
        }

        stage('Clone') {
            steps {
                git branch: 'main', url: 'https://github.com/naruba200/MyDockerApp.git'
            }
        }

        stage('Clean bin/obj') {
            steps {
                bat '''
                rmdir /s /q MyDockerApp\\bin
                rmdir /s /q MyDockerApp\\obj
                dotnet clean
                '''
            }
        }

        stage('Restore & Build & Publish') {
            steps {
                bat "dotnet restore"
                bat "dotnet build --configuration Release"
                bat "dotnet publish %PROJECT_PATH% -c Release -o %PUBLISH_DIR% /p:DisableBuildStaticWebAssets=true"
            }
        }

        stage('Docker Build') {
            steps {
                bat "docker build -t ${dockerImageName}:latest -f \"${WORKSPACE}\\MyDockerApp\\Dockerfile\" \"${WORKSPACE}\\MyDockerApp\""
            }
        }

        stage('Docker Stop & Remove (nếu có)') {
            steps {
                bat """
                @echo off
                docker stop %CONTAINER_NAME% >nul 2>&1
                docker rm %CONTAINER_NAME% >nul 2>&1
                """
            }
        }

        stage('Docker Run') {
            steps {
                bat "docker run -d --name %CONTAINER_NAME% -p %EXPOSE_PORT%:%INTERNAL_PORT% %IMAGE_NAME%"
            }
        }
    }
}
